Table: Point2D

+-------------+------+
| Column Name | Type |
+-------------+------+
| x           | int  |
| y           | int  |
+-------------+------+
(x, y) is the primary key column for this table.
Each row of this table indicates the position of a point on the X-Y plane.
 

The distance between two points p1(x1, y1) and p2(x2, y2) is sqrt((x2 - x1)2 + (y2 - y1)2).

Write an SQL query to report the shortest distance between any two points from the Point2D table. Round the distance to two decimal points.

The query result format is in the following example.

 

Example 1:

Input: 
Point2D table:
+----+----+
| x  | y  |
+----+----+
| -1 | -1 |
| 0  | 0  |
| -1 | -2 |
+----+----+
Output: 
+----------+
| shortest |
+----------+
| 1.00     |
+----------+
Explanation: The shortest distance is 1.00 from point (-1, -1) to (-1, 2).
select min(shortest) as shortest
from
(select ROUND(SQRT(((p2.x - p1.x)*(p2.x - p1.x)) + ((p2.y - p1.y)*(p2.y - p1.y))),2) as shortest
from point2d p1 cross join point2d p2)tmp
where shortest <> 0


# Write your MySQL query statement below
with cte as (
    select x, y, row_number() over() rnk from point2d
)

select round(min(dist), 2) shortest
from (
    select sqrt(power(b.x - a.x, 2) + power(b.y - a.y, 2)) dist
    from cte a, cte b
    where a.rnk != b.rnk
) a
